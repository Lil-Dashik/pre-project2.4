name: Automatically update the app
on:
  push:
    branches: [ master, main ]
jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      DOCKER_USER: ${{ secrets.DOCKER_USER }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      DOCKER_IMAGE: ${{ secrets.DOCKER_IMAGE }}
      REMOTE_SERVER: ${{ secrets.REMOTE_SERVER }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Build and Push Docker image to Docker Hub
        run: |
            echo $DOCKER_PASSWORD | docker login --username $DOCKER_USER --password-stdin
            docker build -t $DOCKER_USER/$DOCKER_IMAGE:latest .
            docker push $DOCKER_USER/$DOCKER_IMAGE:latest
            docker pull $DOCKER_USER/$DOCKER_IMAGE:latest || exit 1
            docker images $DOCKER_USER/$DOCKER_IMAGE:latest

      - name: Remove old docker-compose.yaml from remote server
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa $REMOTE_SERVER "
           sudo rm -f /home/dasha/docker-compose.yaml

      - name: Copy new docker-compose.yaml to remote server
        run: |
          scp -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa docker-compose.yaml $REMOTE_SERVER:/home/dasha/

      - name: Create .env file
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa $REMOTE_SERVER "
            echo DB_NAME=$DB_NAME >> /home/dasha/.env
            echo DB_USER=$DB_USER >> /home/dasha/.env
            echo DB_PASSWORD=$DB_PASSWORD >> /home/dasha/.env
            "

      - name: Deploy new container
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa $REMOTE_SERVER "
            cd /home/dasha && sudo docker-compose down 
            sudo docker-compose up -d
            sudo rm -f .env
            "
          if: success()